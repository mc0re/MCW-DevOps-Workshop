name: CI/CD with GitHub Actions

# Controls when the action will run.
# Trigger only on master branch.
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  resourcegroup: mcwworkshoporg
  containerregistry: mcwworkshop.azurecr.io
  registryusername: mcwworkshop
  imagename: mswworkshop.azurecr.io/tailspintoys/web

# Jobs of the workflow
jobs:
  build:
    # Which runner to use
    runs-on: ubuntu-latest

    # Steps - a sequence of tasks
    steps:
      # Check out the repository
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ACR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.containerregistry }}
          username: ${{ env.registryusername }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push the image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.imagename }}:${{ github.sha }}

      - name: Upload ARM templates
        uses: actions/upload-artifact@v2
        with:
          name: armteplate
          path: ${{ github.workspace }}/armtemplate/

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: https://${{ steps.deploy_site.outputs.webappname }}.azurewebsites.net
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download ARM template
        uses: actions/download-artifact@v2
        with:
          name: armtemplate

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        id: deploy_site
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          resourceGroupName: ${{ env.resourcegroup }}
          template: ./azuredeploy.json
          parameters:
            environment=dev
            administratorLogin=Admin
            administratorLoginPassword=${{ secrets.DBPASSWORD }}

      - name: Deploy to staging
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp config container set \
               --resource-group ${{ env.resourcegroup }} \
               --name ${{ steps.deploy_site.outputs.webappname }} \
               --docker-custom-image-name ${{ env.imagename }}:${{ github.sha }} \
               --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} \
               --docker-registry-server-url https://${{ env.containerregistry }} \
               --docker-registry-server-user ${{ env.registryusername }} \
               --slot staging
      - name: Swap slots
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap -g ${{ env.resourcegroup }} \
               -n ${{ steps.deploy_site.outputs.webappname }} \
               --slot staging --target-slot production

  deploy-test:
    runs-on: ubuntu-latest
    environment:
      name: Test
      url: https://${{ steps.deploy_site.outputs.webappname }}.azurewebsites.net
    needs: deploy-dev
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download ARM template
        uses: actions/download-artifact@v2
        with:
          name: armtemplate

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        id: deploy_site
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          resourceGroupName: ${{ env.resourcegroup }}
          template: ./azuredeploy.json
          parameters:
            environment=dev
            administratorLogin=Admin
            administratorLoginPassword=${{ secrets.DBPASSWORD }}

      - name: Deploy to staging
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp config container set \
               --resource-group ${{ env.resourcegroup }} \
               --name ${{ steps.deploy_site.outputs.webappname }} \
               --docker-custom-image-name ${{ env.imagename }}:${{ github.sha }} \
               --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }} \
               --docker-registry-server-url https://${{ env.containerregistry }} \
               --docker-registry-server-user ${{ env.registryusername }} \
               --slot staging
      - name: Swap slots
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap -g ${{ env.resourcegroup }} \
               -n ${{ steps.deploy_site.outputs.webappname }} \
               --slot staging --target-slot production
